connesione al db
<?php

//connessione  al db   host,nomw utente password  dbda usare
$link =mysql_connect("a22docente","softuser","_soft*");

//esecuzione query
$query =mysql_query("select login AS A from utente ");

//iterazione  sui  risultati 
while ($record  =  mysql_fetch_assoc($query))
{
 echo.$record['a']; 
}

?>










--------------popolare tabelle ----------
insert into utente(login,password) select login,password from soft2015.utente;



________________   creare base dati 
 optimize  table  post;   

Alter table  utente        /modifica   tabella


GRANT all  on  allievo 19.* to  softuser@'%';

flush  privileges;      /aggiornamento  permessi  


drop table utente2       / cancella tabella

//crea e popola tabella
create  table utente   AS   SELECT *   from  soft2015.utente

//crea e popola tabella
create  table utente   like   SELECT *   from  soft2015.utente
insert into  utente2   like   SELECT *   from  soft2015.utente

creare   tabelle  allievo18
use     allievo18 

create table utente (id int not null auto_increment primary key, login varchar(255) not null,password char(40) not null);


show create  table  utente; 

alter table post ADD column titolo         varchar(255) not null after id;  /aggiungere un campo
alter table post CHANGE     titolo titolo  varchar(255) not null;           /modifico un campo
alter table post DROP       titolo;                                        /cancello  un campo

DELETE  FROM  post where  1;                                             /cancella tutte le righe 
TRUNCATE TABLE   post;

SHOW indexes from utente\G; 	
ALTER TABLE utente ADD INDEX login(login);                     /inserisco   un indice
ALTER TABLE utente drop INDEX login;                           /cancello   un indice
ALTER TABLE utente ADD unique INDEX login(login);
ALTER TABLE fanq  ADD INDEX UNIQUE  postutente(post,utente);
ALTER TABLE post  ADD FULLTEXT index testo(testo);
--------------------------------------------------------------------------
----

create table utente (id int not null auto_increment primary key, login varchar(255) not null,password char(40) not null);

create table post (id int not null auto_increment primary key,utente int(11) not null,testo text not null,dataora datatime not null);

create table fanq (id int not null auto_increment primary key,utente int(11) not null,post int(11) not null);


create table media (id int not null auto_increment primary key,post int(11) not null,descrizione varchar(255) not null)




estrarre il  
nome stazione
numero del tornello

select stazione.nome,tornello.numero as tornello, count(*) from accesso    
join tornello  on  accesso.tornello = tornello.id     
join stazione on tornello.stazione=stazione.id 
group by tornello;


select    year(dataora) as anno, month(dataora) as mese, count(*) as numero,sum(esito=0) as ko,sum(esito=1) as ok  from accesso  group by anno,mese;



select    year(dataora) as anno, month(dataora) as mese, count(*) as numero,sum(not esito) as ko,sum(esito) as ok  from accesso  group by anno,mese;

select    year(dataora) as anno, month(dataora) as mese, count(*) as numero  from accesso  group by anno,mese;


mysql> select    year(dataora) as anno month(dataora) as mese,   count(*) as numero  from    accesso  group by anno,mese ;


estrarre il  numero di passaggi per ogni ora di natale 2015
-----------------------------------------------------------
mysql> select count(*), hour(dataora) as ora  from    accesso    where date(dataora) = "2014-12-25" group by  ora ;


select count(*), hour(dataora)  from    accesso    where date(dataora) = "2014-12-25" group by  hour(dataora) ;


----------------------------------------------------------------------------------------
select utente.cognome  , count(*) from accesso 
  join tornello  on  accesso.tornello = tornello.id  
  join stazione on tornello.stazione=stazione.id  
  join abbonamento on accesso.abbonamento = abbonamento.id   
  join utente on abbonamento.utente = utente.id   where  utente.id = 1  
       group by utente.id; 



select utente.cognome  , count(*) from accesso 
join tornello  on  accesso.tornello = tornello.id  
join stazione on tornello.stazione=stazione.id  
join abbonamento on accesso.abbonamento = abbonamento.id   
join utente on abbonamento.utente = utente.id     
group by utente.id; 




select regione.nome as nome,count(*) as provincie,sum(provincia.abitanti) as abitanti,
sum(provincia.comuni) as comuni,sum(provincia.superficie) as superficie ,
group_concat(provincia.sigla) as sigla,
round (sum(provincia.abitanti)/sum(provincia.superficie),2) as densita  
from regione  
join provincia  on regione.id = provincia.regione 
group by nome order by  densita;
 

select regione.nome as nome,count(*) as provincie,sum(provincia.abitanti) as abitanti,
sum(provincia.comuni) as comuni,sum(provincia.superficie) as superficie ,
group_concat(provincia.sigla) as sigla   
from regione  
join provincia  on regione.id = provincia.regione 
group by nome 
order by sigla;


 SELECT settore, count(*) as num_articoli,round(sum(quantita * prezzo )),
round(sum(quantita * prezzo )/count(*)) as media  
FROM articolo 
group by settore 
order by media;


SELECT settore, count(*) as num_articoli,round(sum(quantita * prezzo )) as valore   
FROM articolo group by settore order by valore;

SELECT settore, count(*),round(sum(quantita * prezzo )) as articoli   
FROM articolo 
group by settore 
order by articoli;

SELECT settore, count(*)  
FROM articolo 
group by settore;

----------------------14 1 2016- --------------------------------------------------------------------
select count(*) from accesso 
join tornello on  accesso.tornello = tornello.id 
where tornello.stazione = 12;

select count(*), 
sum(esito),100*sum(esito)/count(*) as percentuale 
from  accesso;

 select count(*) 
from  abbonamento 
where  abbonamento.id= 1    and "2014-10-01" 
between dal and al;+----------+


select utente.nome, utente.cognome,abbonamento.dal as inizio_validita ,
       abbonamento.al as fine_validita 
from  utente left 
join abbonamento on utente.id = abbonamento.utente;

select utente.nome,utente.cognome,abbonamento.dal as inizio_validita ,
abbonamento.al as fine_validita 
from utente 
join abbonamento on utente.id = abbonamento.utente;



 select stazione.nome,tornello.numero from stazione join tornello on tornello.stazione = stazione.id;
mysql> desc  accesso;

accesso	
+-------------+----------+------+-----+---------+----------------+
| Field       | Type     | Null | Key | Default | Extra          |
+-------------+----------+------+-----+---------+----------------+
| id          | int(11)  | NO   | PRI | NULL    | auto_increment |
| dataora     | datetime | NO   |     | NULL    |                |
| abbonamento | int(11)  | NO   |     | NULL    |                |
| esito       | int(11)  | NO   |     | NULL    |                |
+-------------+----------+------+-----+---------+----------------+

mysql> desc  utente;
+-----------------+--------------+------+-----+---------+----------------+
| Field           | Type         | Null | Key | Default | Extra          |
+-----------------+--------------+------+-----+---------+----------------+
| id              | int(11)      | NO   | PRI | NULL    | auto_increment |
| cognome         | varchar(255) | NO   |     | NULL    |                |
| nome            | varchar(255) | NO   |     | NULL    |                |
| data_nascita    | date         | NO   |     | NULL    |                |
| luogo_residenza | varchar(255) | NO   |     | NULL    |                |
+-----------------+--------------+------+-----+---------+----------------+


mysql> desc  abbonamento;+--------+---------+------+-----+---------+----------------+
| Field  | Type    | Null | Key | Default | Extra          |
+--------+---------+------+-----+---------+----------------+
| id     | int(11) | NO   | PRI | NULL    | auto_increment |
| utente | int(11) | NO   |     | NULL    |                |
| dal    | date    | NO   |     | NULL    |                |
| al     | date    | NO   |     | NULL    |                |
+--------+---------+------+-----+---------+----------------+


mysql> desc  tornello;
+----------+---------+------+-----+---------+----------------+
| Field    | Type    | Null | Key | Default | Extra          |
+----------+---------+------+-----+---------+----------------+
| id       | int(11) | NO   | PRI | NULL    | auto_increment |
| stazione | int(11) | NO   |     | NULL    |                |
| numero   | int(11) | NO   |     | NULL    |                |
+----------+---------+------+-----+---------+----------------+


+-------+--------------+------+-----+---------+----------------+
| Field | Type         | Null | Key | Default | Extra          |
+-------+--------------+------+-----+---------+----------------+
| id    | int(11)      | NO   | PRI | NULL    | auto_increment |
| nome  | varchar(255) | NO   |     | NULL    |                |
+-------+--------------+------+-----+---------+----------------+

+-------------------------+
| Tables_in_metropolitana |
+-------------------------+
| abbonamento             |
| accesso                 |
| stazione                |
| tornello                |
| utente                  |
+-------------------------+

-----------------------------23  12  2015  ----------------------------------------------------
relazioni   tra tabelle




select regione.nome as nome_regione ,provincia.nome as nome_provincia ,provincia.sigla,provincia.superficie,provincia.abitanti, provincia.comuni from regione join provincia on  regione.id = provincia.regione ;

select * from regione join provincia on  regione.id = provincia.regione ;

mysql> desc regione;
+-------+------------------+------+-----+---------+----------------+
| Field | Type             | Null | Key | Default | Extra          |
+-------+------------------+------+-----+---------+----------------+
|	id    | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
| nome  | varchar(255)     | NO   |     | NULL    |                |
+-------+------------------+------+-----+---------+----------------+

+------------+------------------+------+-----+---------+----------------+
| Field      | Type             | Null | Key | Default | Extra          |
+------------+------------------+------+-----+---------+----------------+
| id         | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
| nome       | varchar(255)     | NO   |     | NULL    |                |
| sigla      | char(2)          | NO   |     | NULL    |                |
| abitanti   | int(11)          | NO   |     | NULL    |                |
| superficie | float            | NO   |     | NULL    |                |
| comuni     | int(11)          | NO   |     | NULL    |                |
| regione    | int(10)          | NO   |     | NULL    |                |
+------------+------------------+------+-----+---------+----------------+









-----------------------------------------------------------------------------------
Inserire  righe in tabella 

update allievo set login ="mcristia", password = MD5("mauri") where id=1;

insert into allievo(cognome,nome,data_nascita) VALUES ("Cristiani","Maurizio","1961-08-09");
insert into squadra VALUES(null,"Milan","San Siro","Milano",1925,13,"Allegri","Berlusconi");
insert into giocatore VALUES(null,"Rivera","Gianni","1960-01-01",1.75,68,"M","Italia");
desc squadra;
desc giocatore; 
insert into giocatore VALUES(null,"Rivera","Gianni","1960-01-01",1.75,68,"M","Italia");
insert into utente(cognome,data_nascita,nome) VALUES ("Cristiani","1961-08-09","Maurizio");
----------------------------------------------------------------------------------------------.----
estrarre lista delle regioni

select  group_concat(distinct settore separator "|" )  from articolo ;
select  group_concat(nome order by nome desc separator "|")  from regione ; 
select  group_concat(cognome,nome,data_nascita, "\n  ")  from utente;


----------------------------------------------------------------------------------------------------
SELECT

calcolare   superficie media e deviazione standard 
abitanti 
comuni
delle provincie
scrivere come media  deviazione

select concat(round(avg(superficie),2),"+-", round(std(superficie),2)) as superficie from provincia;
select concat(round(avg(superficie),2),"+-", round(std(superficie),2)) as superficie from provincia;
---------------------------------------------------------------------------------------
calcolare superficie totale e numero abitanti numero comuni italia
select sum(comuni),sum(abitanti),sum(superficie) from provincia;
--------------------------------------------------------------------------
calcolare il  valore totale del magazzino
SELECT sum(prezzo*quantita) FROM articolo;

---------------------------------------------------------------------------------------------------

SELECT max(data_nascita) FROM utente

--------------------------------------------------------------------------------------
conta il numero degli articoli

select count(*) from articolo;

tabella articolo
+--------------+------------------+------+-----+---------+----------------+
| Field        | Type             | Null | Key | Default | Extra          |
+--------------+------------------+------+-----+---------+----------------+
| id           | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
| settore      | varchar(255)     | NO   |     |         |                |
| fornitore    | varchar(255)     | NO   |     |         |                |
| codice       | varchar(255)     | NO   |     |         |                |
| descrizione  | varchar(255)     | NO   |     |         |                |
| collocazione | varchar(255)     | NO   |     |         |                |
| cespite      | varchar(255)     | NO   |     |         |                |
| quantita     | int(10) unsigned | NO   |     | 0       |                |
| in_uso       | int(10) unsigned | NO   |     | NULL    |                |
| unita        | varchar(255)     | NO   |     | NULL    |                |
| prezzo       | decimal(12,5)    | YES  |     | NULL    |                |
| note         | text             | NO   |     | NULL    |                |
+--------------+------------------+------+-----+---------+----------------+

	select nome, round (abitanti/superficie, 2) from provincia order by abitanti/superficie, 2; --> Estrarre nome e densità abitativa da provincia ordinate per densità abitativa, densità arrotondata di due cifre decimali.

----------------------------------------------------------------------------------------------------------

select concat (nome, '(',sigla,')') from provincia; --> concatenazione di stringhe.

----------------------------------------------------------------------------------------------------------

select concat("Il sig. ",LEFT(nome,1)," ",cognome) FROM utente; --> Estrarre stringhe di tipo "Il sig. nome cognome" da utente.

----------------------------------------------------------------------------------------------------------

select concat_ws(" ","Il sig.",LEFT(nome,1),cognome, "nato il",data_nascita) FROM utente; --> Si specifica uno spazio iniziale.

----------------------------------------------------------------------------------------------------------

select concat_ws(" ","Il sig.",CONCAT(LEFT(nome,1.),"."),cognome, "nato il",data_nascita) FROM utente; --> Viene eliminato così lo spazio tra l'iniziale del nome e il punto.

----------------------------------------------------------------------------------------------------------

SELECT CONCAT(UPPER(LEFT(descrizione,1)),LOWER(SUBSTRING(descrizione,2))) AS "Articoli" FROM articolo limit 10; --> Visualizzare la prima lettera maiuscola e tutte le altre minuscole.

----------------------------------------------------------------------------------------------------------

SELECT nome, abitanti, superficie FROM provincia WHERE (abitanti/superficie) BETWEEN 500 AND 1000; --> Estrae nomi, abitanti, superficie e densità abitativa tra 500 e 1000.

----------------------------------------------------------------------------------------------------------

SELECT nome, sigla FROM provincia WHERE sigla IN("AO", "AT", "PU", "OT", "OG", "FC", "BT", "KR", "VV", "WC"); --> Estrarre nomi e sigla delle provincie di AO, AT, PU, OT, OG, FC, BT, KR, VV, WC.

----------------------------------------------------------------------------------------------------------

SELECT settore, descrizione, quantita*prezzo FROM articolo WHERE (quantita >0) AND (quantita*prezzo NOT BETWEEN 50 AND 2000); --> Estrarre settore, descrizione e valore degli articoli con valore inferiore a 50 euro o superiore a 2000 euro non esauriti.

----------------------------------------------------------------------------------------------------------

SELECT settore, descrizione, quantita, prezzo FROM articolo WHERE settore = "ristorativo"; --> Estrarre settore, descrizione, quantita e prezzo degli articoli del settore ristorativo.

----------------------------------------------------------------------------------------------------------

 select regione.nome as nome,count(*) as provincie,sum(provincia.abitanti) as abitanti,sum(provincia.comuni) as comuni,sum(provincia.superficie) as superficie ,group_concat(provincia.sigla) as sigla,round (sum(provincia.abitanti)/sum(provincia.superficie),2) as densita  from regione  join provincia  on regione.id = provincia.regione group by nome order by sigla;


SELECT settore, descrizione, quantita, prezzo FROM articolo WHERE descrizione LIKE "%LEGNO%"; --> Estrarre da una descrizione tutti gli articoli con la parola "legno"

----------------------------------------------------------------------------------------------------------

SELECT settore, descrizione, quantita, prezzo FROM articolo WHERE descrizione LIKE "%LEGNO%" AND descrizione LIKE "%SCALPELLO%"; --> Estrarre settore, descrizione, quantita e prezzo degli articoli la cui descrizione contiene le parole "legno" e "scalpello".

----------------------------------------------------------------------------------------------------------

SELECT round (abitanti/superficie,2) AS "densità abitativa" FROM provincia LIMIT 10; --> AS corrisponde all'alias dell'operazione.

----------------------------------------------------------------------------------------------------------

SELECT nome, cognome, data_nascita, day(data_nascita) AS "day", month(data_nascita) AS "month", year(data_nascita) AS "year" FROM utente;

----------------------------------------------------------------------------------------------------------

SELECT nome, cognome, data_nascita, day(data_nascita) AS "day", month(data_nascita) AS "month", year(data_nascita) AS "year", dayname (data_nascita) AS "dayname", monthname (data_nascita) AS "monthname" FROM utente WHERE month(data_nascita) =3 AND day(data_nascita) >=21 OR month(data_nascita)=6 and day(data_nascita)<=20 OR (month(data_nascita) between 4 and 5);

----------------------------------------------------------------------------------------------------------

SELECT nome, cognome, data_nascita, day(data_nascita) AS "day", month(data_nascita) AS "month", year(data_nascita) AS "year", dayname (data_nascita) AS "dayname", monthname (data_nascita) AS "monthname", right((data_nascita),5) FROM utente WHERE right((data_nascita),5) BETWEEN "03-21" AND "06-20";

----------------------------------------------------------------------------------------------------------

SELECT nome, cognome, data_nascita, date_format(data_nascita, "%d/%m/%Y") AS "Formato italiano" FROM utente;

----------------------------------------------------------------------------------------------------------

SELECT nome, cognome, data_nascita, timestampdiff(YEAR, data_nascita,CURDATE()) AS "AGE" FROM utente;


